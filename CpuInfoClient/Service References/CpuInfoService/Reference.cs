//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CpuInfoClient.CpuInfoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CpuInfoService.ICpuService")]
    public interface ICpuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICpuService/SendCpuReport", ReplyAction="http://tempuri.org/ICpuService/SendCpuReportResponse")]
        void SendCpuReport(string machineName, double processor, ulong memUsage, ulong totalMemory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICpuService/SendCpuReport", ReplyAction="http://tempuri.org/ICpuService/SendCpuReportResponse")]
        System.Threading.Tasks.Task SendCpuReportAsync(string machineName, double processor, ulong memUsage, ulong totalMemory);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICpuServiceChannel : CpuInfoClient.CpuInfoService.ICpuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CpuServiceClient : System.ServiceModel.ClientBase<CpuInfoClient.CpuInfoService.ICpuService>, CpuInfoClient.CpuInfoService.ICpuService {
        
        public CpuServiceClient() {
        }
        
        public CpuServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CpuServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CpuServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CpuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendCpuReport(string machineName, double processor, ulong memUsage, ulong totalMemory) {
            base.Channel.SendCpuReport(machineName, processor, memUsage, totalMemory);
        }
        
        public System.Threading.Tasks.Task SendCpuReportAsync(string machineName, double processor, ulong memUsage, ulong totalMemory) {
            return base.Channel.SendCpuReportAsync(machineName, processor, memUsage, totalMemory);
        }
    }
}
